<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ccnu.mapping.UserTMapper" >

  <resultMap id="BaseResultMap" type="ccnu.model.UserT" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_name, password, age
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert"  parameterType="ccnu.model.UserT" useGeneratedKeys="true" keyProperty="id">
    insert into user_t ( user_name, password, 
      age)
    values ( #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ccnu.model.UserT" >
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ccnu.model.UserT" >
    update user_t
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ccnu.model.UserT" >
    update user_t
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByIds" resultMap="BaseResultMap" parameterType="ccnu.model.UserT">
    Select
    <include refid="Base_Column_List" />
    from user_t where id in
       <foreach item="item" index="index" collection="ids"
              open="(" separator="," close=")">
             #{item}
       </foreach>
  </select>
  <select id="findByIdsArray" resultMap="BaseResultMap">
    Select
    <include refid="Base_Column_List" />
    from user_t where id in
       <foreach collection="array" item="item" index="index"
            open="(" close=")" separator=",">
            #{item}
        </foreach>
  </select>
  <select id="findByIdsAndAges" resultMap="BaseResultMap">
        select *
        from user_t 
        <where>
            <if test="idList!=null and idList.size()!=0">
                id in
                <foreach collection="idList" item="item"
                    index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if> 
            <if test="agelist!=null and agelist.size()!=0">
                AND age in
                <foreach collection="agelist" item="item"
                    index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach> 
            </if> 
        </where>
    </select>
    <insert id="creatTableAndInsert" parameterType="java.util.Map" statementType="STATEMENT">
        create table ${tablename}
        <foreach collection="keys" item="k" index="index" open="(" separator="," close=");">
            ${k} varchar(30) not null
        </foreach>
        insert into ${tablename}
        <foreach collection="keys" item="k" index="index" open="(" separator="," close=")">
            ${k}
        </foreach>
        values
        <foreach collection="keys" item="k" index="index" open="(" separator="," close=")">
            '${params[k]}'
        </foreach>
    </insert>
    
</mapper>